"use strict";(self.webpackChunkdocusaurus_safira=self.webpackChunkdocusaurus_safira||[]).push([[9238],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=l(t),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,c(c({ref:n},s),{},{components:t})):r.createElement(f,c({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5290:function(e,n,t){t.r(n),t.d(n,{assets:function(){return b},contentTitle:function(){return h},default:function(){return w},frontMatter:function(){return j},metadata:function(){return k},toc:function(){return g}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),c=["components"],i={toc:[{value:"<code>safira-cli project build-publish</code>",id:"safira-cli-project-build-publish",level:2}]};function p(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"safira-cli-project-build-publish"},(0,o.kt)("inlineCode",{parentName:"h2"},"safira-cli project build-publish")),(0,o.kt)("p",null,"Build your project generating docker image."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli project build-publish [--help] [--docker-file <value>] [-v <value>] [--skip-test yes|no]\n\nFLAGS\n  -v, --version=<value>  App Version\n  --docker-file=<value>  Dockerfile path\n  --help                 Show CLI help.\n  --skip-test=<option>   [default: no] Skip test\n                         <options: yes|no>\n\nDESCRIPTION\n  Build your project generating docker image.\n\nEXAMPLES\n  $ safira-cli project build-publish\n\n  $ safira-cli project build-publish --version 1.0.0 --skip-test true\n\n  $ safira-cli project build-publish --docker-file ./src/main/docker/Dockerfile\n")))}p.isMDXComponent=!0;var l=["components"],s={toc:[{value:"<code>safira-cli project new [PROJECT-NAME]</code>",id:"safira-cli-project-new-project-name",level:2}]};function u(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"safira-cli-project-new-project-name"},(0,o.kt)("inlineCode",{parentName:"h2"},"safira-cli project new [PROJECT-NAME]")),(0,o.kt)("p",null,"Create a new project"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli project new [PROJECT-NAME] [--help] [-l <value>] [-f springboot|quarkus] [--new-project-root\n    <value>] [-o <value>] [-i <value>] [--inso-spec-name <value>] [--project-description <value>] [--java-pack-manager\n    gradle|maven] [--java-springboot-version <value>] [--java-package <value>] [--java-version java8|java11|java17]\n    [--application-port <value>] [--docker-registry <value>] [--kubernetes-namespace <value>] [--kong-kubernetes yes|no]\n\nARGUMENTS\n  PROJECT-NAME  Use '.' to create project into current folder or name of the project to create a new folder.\n\nFLAGS\n  -f, --framework=(springboot|quarkus)\n  -i, --insomnia-workspace=<value>      Import OpenAPI file from the INSO Workspace.\n  -l, --language=java                   Programming language to use\n  -o, --openapi-file-path=<value>       The path to the OpenAPI file.\n  --application-port=8080               Application port\n  --docker-registry=localhost:5000      Docker registry\n  --help                                Show CLI help.\n  --inso-spec-name=<value>              The name of the INSO specification.\n  --java-pack-manager=(gradle|maven)    Java package management\n  --java-package=com.safira.demo        Java package\n  --java-springboot-version=2.5.13      Springboot version\n  --java-version=(java8|java11|java17)  Java version\n  --kong-kubernetes=<option>            Generate Kong for Kubernetes configuration\n                                        <options: yes|no>\n  --kubernetes-namespace=default        Kubernetes namespace\n  --new-project-root=<value>            The path where new projects will be created, relative to the new workspace root.\n  --project-description=<value>         The description of the new project.\n\nDESCRIPTION\n  Create a new project\n\nEXAMPLES\n  $ safira-cli project new\n\n  $ safira-cli project new app-name\n\n  $ safira-cli project new app-name --language java11 --java-pack-manager gradle --application-port 8090\n\n  $ safira-cli project new .  -create a project in the current folder\n")))}u.isMDXComponent=!0;var m=["components"],d={toc:[{value:"<code>safira-cli project update</code>",id:"safira-cli-project-update",level:2}]};function f(e){var n=e.components,t=(0,a.Z)(e,m);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"safira-cli-project-update"},(0,o.kt)("inlineCode",{parentName:"h2"},"safira-cli project update")),(0,o.kt)("p",null,"describe the command here"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli project update [-h] [-o <value>] [-i <value>] [--inso-spec-name <value>]\n\nFLAGS\n  -h, --help                        Show CLI help.\n  -i, --insomnia-workspace=<value>  Import OpenAPI file from the INSOMNIA Workspace.\n  -o, --openapi-file-path=<value>   The path to the OpenAPI file.\n  --inso-spec-name=<value>          The name of the INSO specification.\n\nDESCRIPTION\n  describe the command here\n")))}f.isMDXComponent=!0;var v=["components"],j={title:"Project"},h=void 0,k={unversionedId:"commands/project/index",id:"commands/project/index",title:"Project",description:"---",source:"@site/docs/commands/project/index.mdx",sourceDirName:"commands/project",slug:"/commands/project/",permalink:"/safira-docs/docs/commands/project/",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/commands/project/index.mdx",tags:[],version:"current",frontMatter:{title:"Project"},sidebar:"tutorialSidebar",previous:{title:"commandss",permalink:"/safira-docs/docs/commands/"},next:{title:"Project",permalink:"/safira-docs/docs/commands/project/cicd/"}},b={},g=[],y={toc:g};function w(e){var n=e.components,t=(0,a.Z)(e,v);return(0,o.kt)("wrapper",(0,r.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(u,{components:t.components,mdxType:"ProjectNew"}),(0,o.kt)("hr",null),(0,o.kt)(f,{components:t.components,mdxType:"ProjectUpdate"}),(0,o.kt)("hr",null),(0,o.kt)(p,{components:t.components,mdxType:"BuildPublish"}))}w.isMDXComponent=!0}}]);