"use strict";(self.webpackChunkdocusaurus_safira=self.webpackChunkdocusaurus_safira||[]).push([[7384],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,f=m["".concat(l,".").concat(d)]||m[d]||s[d]||a;return n?o.createElement(f,c(c({ref:t},p),{},{components:n})):o.createElement(f,c({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var u=2;u<a;u++)c[u]=n[u];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7031:function(e,t,n){n.r(t),n.d(t,{assets:function(){return x},contentTitle:function(){return h},default:function(){return O},frontMatter:function(){return k},metadata:function(){return y},toc:function(){return b}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),c=["components"],i={toc:[{value:"<code>safira-cli okteto context</code>",id:"safira-cli-okteto-context",level:2}]};function l(e){var t=e.components,n=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"safira-cli-okteto-context"},(0,a.kt)("inlineCode",{parentName:"h2"},"safira-cli okteto context")),(0,a.kt)("p",null,"Change Okteto context"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli okteto context [--help]\n\nFLAGS\n  --help  help for context\n\nDESCRIPTION\n  Change Okteto context\n")))}l.isMDXComponent=!0;var u=["components"],p={toc:[{value:"<code>safira-cli okteto up</code>",id:"safira-cli-okteto-up",level:2}]};function s(e){var t=e.components,n=(0,r.Z)(e,u);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"safira-cli-okteto-up"},(0,a.kt)("inlineCode",{parentName:"h2"},"safira-cli okteto up")),(0,a.kt)("p",null,"Activate your development container"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli okteto up [--build] [-c <value>] [-f <value>] [--help] [-n <value>] [--pull] [-r <value>]\n    [--reset] [-l <value>]\n\nFLAGS\n  -c, --context=<value>    context where the up command is executed\n  -f, --file=<value>       path to the manifest file (default 'okteto.yml')\n  -l, --loglevel=<value>   amount of information outputted (debug, info, warn, error) (default 'warn')\n  -n, --namespace=<value>  namespace where the up command is executed\n  -r, --remote=<value>     configures remote execution on the specified port\n  --build                  build on-the-fly the dev image using the info provided by the 'build' okteto manifest field\n  --help                   help for up\n  --pull                   force dev image pull\n  --reset                  reset the file synchronization database\n\nDESCRIPTION\n  Activate your development container\n")))}s.isMDXComponent=!0;var m=["components"],d={toc:[{value:"<code>safira-cli okteto down</code>",id:"safira-cli-okteto-down",level:2}]};function f(e){var t=e.components,n=(0,r.Z)(e,m);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"safira-cli-okteto-down"},(0,a.kt)("inlineCode",{parentName:"h2"},"safira-cli okteto down")),(0,a.kt)("p",null,"Destroy development container"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli okteto down [-c <value>] [-f <value>] [--help] [-n <value>] [--volumes]\n\nFLAGS\n  -c, --context=<value>    context where the down command is executed\n  -f, --file=<value>       path to the manifest file (default 'okteto.yml')\n  -n, --namespace=<value>  namespace where the up command is executed\n  --help                   help for down\n  --volumes                remove persistent volume\n\nDESCRIPTION\n  Destroy development container\n")))}f.isMDXComponent=!0;var v=["components"],k={title:"Okteto"},h=void 0,y={unversionedId:"commands/okteto/index",id:"commands/okteto/index",title:"Okteto",description:"---",source:"@site/docs/commands/okteto/index.mdx",sourceDirName:"commands/okteto",slug:"/commands/okteto/",permalink:"/safira-docs/docs/commands/okteto/",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/commands/okteto/index.mdx",tags:[],version:"current",frontMatter:{title:"Okteto"},sidebar:"tutorialSidebar",previous:{title:"Kong",permalink:"/safira-docs/docs/commands/kong/"},next:{title:"Argocd",permalink:"/safira-docs/docs/commands/argocd/"}},x={},b=[],g={toc:b};function O(e){var t=e.components,n=(0,r.Z)(e,v);return(0,a.kt)("wrapper",(0,o.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(l,{components:n.components,mdxType:"Context"}),(0,a.kt)("hr",null),(0,a.kt)(s,{components:n.components,mdxType:"Up"}),(0,a.kt)("hr",null),(0,a.kt)(f,{components:n.components,mdxType:"Down"}))}O.isMDXComponent=!0}}]);