"use strict";(self.webpackChunkdocusaurus_safira=self.webpackChunkdocusaurus_safira||[]).push([[903],{3905:function(e,a,r){r.d(a,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var l=n.createContext({}),c=function(e){var a=n.useContext(l),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},p=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},f=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(r),m=t,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(d,i(i({ref:a},p),{},{components:r})):n.createElement(d,i({ref:a},p))}));function m(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4559:function(e,a,r){r.r(a),r.d(a,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var n=r(7462),t=r(3366),o=(r(7294),r(3905)),i=["components"],s={sidebar_position:1},l=void 0,c={unversionedId:"safira-cli/Comandos Safira-CLI/Install Safira-CLI",id:"safira-cli/Comandos Safira-CLI/Install Safira-CLI",title:"Install Safira-CLI",description:"Instala\xe7\xe3o Safira-CLI",source:"@site/docs/safira-cli/Comandos Safira-CLI/Install Safira-CLI.md",sourceDirName:"safira-cli/Comandos Safira-CLI",slug:"/safira-cli/Comandos Safira-CLI/Install Safira-CLI",permalink:"/safira-docs/docs/safira-cli/Comandos Safira-CLI/Install Safira-CLI",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/safira-cli/Comandos Safira-CLI/Install Safira-CLI.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Vis\xe3o",permalink:"/safira-docs/docs/safira-cli/visao"},next:{title:"AutoComplete Safira",permalink:"/safira-docs/docs/safira-cli/Comandos Safira-CLI/AutoComplete Safira"}},p={},u=[{value:"Instala\xe7\xe3o Safira-CLI",id:"instala\xe7\xe3o-safira-cli",level:3},{value:"Como utilizar o Safira-CLI",id:"como-utilizar-o-safira-cli",level:3}],f={toc:u};function m(e){var a=e.components,r=(0,t.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"instala\xe7\xe3o-safira-cli"},"Instala\xe7\xe3o Safira-CLI"),(0,o.kt)("p",null,"Comando para instala\xe7\xe3o global:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @vfipaas/safira-cli\n")),(0,o.kt)("p",null,"Ver a vers\xe3o do safira-cli:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"safira-cli (-v|--version|version)\n")),(0,o.kt)("p",null,"Criar um projeto Safira-CLI:"),(0,o.kt)("p",null,"Comando para cria\xe7\xe3o do projeto:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"safira-cli project:new [PROJECT-NAME]\n\n")),(0,o.kt)("p",null,"Criar o projeto dentro de uma pasta j\xe1 existente:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"safira-cli project:new .\n\n")),(0,o.kt)("p",null,"Comandos para utiliza\xe7\xe3o:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  safira-cli project:new [PROJECT-NAME]\n\nARGUMENTS\n  PROJECT-NAME  name of the project\n\nOPTIONS\n  -f, --framework=(springboot|quarkus)\n  -h, --help                                 show CLI help\n  -i, --openapi-inso-path=openapi-inso-path  Import OpenAPI file from the INSO Workspace.\n  -l, --language=java                        Programming language to use\n  -o, --openapi-file-path=openapi-file-path  The path to the OpenAPI file.\n  --application-port=8080                    Application port\n  --docker-registry=localhost:5000           Docker registry\n  --inso-spec-name=inso-spec-name            The name of the INSO specification.\n  --java-pack-manager=(gradle|maven)         Java package management\n  --java-package=com.safira.demo             Java package\n  --java-springboot-version=2.5.9            Springboot version\n  --kong-kubernetes=yes|no                   Generate Kong for Kubernetes configuration\n  --kubernetes-namespace=default             Kubernetes namespace\n  --new-project-root=new-project-root        The path where new projects will be created, relative to the new workspace root.\n  --project-description=project-description  The description of the new project.\n\nEXAMPLES\n  safira-cli project:new\n  safira-cli project:new app-name\n  safira-cli project:new app-name --language java11 --java-pack-manager gradle --application-port 8090\n  safira-cli project:new .  -create a project in the current folder\n")),(0,o.kt)("h3",{id:"como-utilizar-o-safira-cli"},"Como utilizar o Safira-CLI"),(0,o.kt)("p",null,"Agora voc\xea pode acessar alguns comandos principais que ir\xe1 te ajudar em sua utiliza\xe7\xe3o:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\n  $ safira-cli commands\n\nOPTIONS\n  -h, --help              show CLI help\n  -j, --json              display unfiltered api data in json format\n  -x, --extended          show extra columns\n  --columns=columns       only show provided columns (comma-separated)\n  --csv                   output is csv format [alias: --output=csv]\n  --filter=filter         filter property by partial string matching, ex: name=foo\n  --hidden                show hidden commands\n  --no-header             hide table header from output\n  --no-truncate           do not truncate output to fit screen\n  --output=csv|json|yaml  output in a more machine friendly format\n  --sort=sort             property to sort by (prepend '-' for descending)\n")))}m.isMDXComponent=!0}}]);