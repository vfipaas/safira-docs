"use strict";(self.webpackChunkdocusaurus_safira=self.webpackChunkdocusaurus_safira||[]).push([[9731],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),d=o,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return t?r.createElement(f,c(c({ref:n},p),{},{components:t})):r.createElement(f,c({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5573:function(e,n,t){t.d(n,{ZP:function(){return s}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),c=["components"],i={toc:[{value:"<code>safira-cli commands</code>",id:"safira-cli-commands",level:2}]};function s(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"safira-cli-commands"},(0,a.kt)("inlineCode",{parentName:"h2"},"safira-cli commands")),(0,a.kt)("p",null,"list all the commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli commands [--json] [-h] [--hidden] [--columns <value> | -x] [--sort <value>] [--filter <value>]\n    [--output csv|json|yaml |  | [--csv | --no-truncate]] [--no-header | ]\n\nFLAGS\n  -h, --help         Show CLI help.\n  -x, --extended     show extra columns\n  --columns=<value>  only show provided columns (comma-separated)\n  --csv              output is csv format [alias: --output=csv]\n  --filter=<value>   filter property by partial string matching, ex: name=foo\n  --hidden           show hidden commands\n  --no-header        hide table header from output\n  --no-truncate      do not truncate output to fit screen\n  --output=<option>  output in a more machine friendly format\n                     <options: csv|json|yaml>\n  --sort=<value>     property to sort by (prepend '-' for descending)\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  list all the commands\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"See code: ",(0,a.kt)("a",{parentName:"em",href:"https://github.com/oclif/plugin-commands/blob/v2.1.0/src/commands/commands.ts"},"@oclif/plugin-commands"))))}s.isMDXComponent=!0},7709:function(e,n,t){t.r(n),t.d(n,{assets:function(){return f},contentTitle:function(){return u},default:function(){return v},frontMatter:function(){return m},metadata:function(){return d},toc:function(){return h}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),c=["components"],i={toc:[{value:"<code>safira-cli help [COMMAND]</code>",id:"safira-cli-help-command",level:2}]};function s(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"safira-cli-help-command"},(0,a.kt)("inlineCode",{parentName:"h2"},"safira-cli help [COMMAND]")),(0,a.kt)("p",null,"Display help for safira-cli."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ safira-cli help [COMMAND] [-n]\n\nARGUMENTS\n  COMMAND  Command to show help for.\n\nFLAGS\n  -n, --nested-commands  Include all nested commands in the output.\n\nDESCRIPTION\n  Display help for safira-cli.\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"See code: ",(0,a.kt)("a",{parentName:"em",href:"https://github.com/oclif/plugin-help/blob/v5.1.12/src/commands/help.ts"},"@oclif/plugin-help"))))}s.isMDXComponent=!0;var l=t(5573),p=["components"],m={sidebar_position:4,sidebar_label:"help",title:"Help"},u=void 0,d={unversionedId:"commands/help",id:"commands/help",title:"Help",description:"---",source:"@site/docs/commands/help.mdx",sourceDirName:"commands",slug:"/commands/help",permalink:"/safira-docs/docs/commands/help",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/commands/help.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"help",title:"Help"},sidebar:"tutorialSidebar",previous:{title:"doctor",permalink:"/safira-docs/docs/commands/doctor"},next:{title:"insomnia",permalink:"/safira-docs/docs/commands/insomnia/"}},f={},h=[],y={toc:h};function v(e){var n=e.components,t=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(s,{components:t.components,mdxType:"Help"}),(0,a.kt)("hr",null),(0,a.kt)(l.ZP,{components:t.components,mdxType:"Commands"}))}v.isMDXComponent=!0}}]);